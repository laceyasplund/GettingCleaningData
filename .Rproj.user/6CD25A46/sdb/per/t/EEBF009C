{
    "contents" : "file <- \"data.zip\"\nurl <- \"https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip\"\ndata_path <- \"UCI HAR Dataset\"\nresult_folder <- \"results\"\n\n##Install required packacets  \n# looks if package is installed\n\nif(!is.element(\"plyr\", installed.packages()[,1])){\n        print(\"Installing packages\")\n        install.packages(\"plyr\")\n}\n\nlibrary(plyr)\n\n## Create data and folders   \n# verifies the data zip file has been downloaded\nif(!file.exists(file)){\n        \n        ##Downloads the data file\n        print(\"downloading Data\")\n        download.file(url,file, mode = \"wb\")\n        \n}\n\nif(!file.exists(result_folder)){\n        print(\"Creating result folder\")\n        dir.create(result_folder)\n} \n\n##reads a table from the zip data file and applies cols\ngetTable <- function (filename,cols = NULL){\n        \n        print(paste(\"Getting table:\", filename))\n        \n        f <- unz(file, paste(data_path,filename,sep=\"/\"))\n        \n        data <- data.frame()\n        \n        if(is.null(cols)){\n                data <- read.table(f,sep=\"\",stringsAsFactors=F)\n        } else {\n                data <- read.table(f,sep=\"\",stringsAsFactors=F, col.names= cols)\n        }\n        \n        \n        data\n        \n}\n\n##Reads and creates a complete data set\ngetData <- function(type, features){\n        \n        print(paste(\"Getting data\", type))\n        \n        subject_data <- getTable(paste(type,\"/\",\"subject_\",type,\".txt\",sep=\"\"),\"id\")\n        y_data <- getTable(paste(type,\"/\",\"y_\",type,\".txt\",sep=\"\"),\"activity\")    \n        x_data <- getTable(paste(type,\"/\",\"X_\",type,\".txt\",sep=\"\"),features$V2) \n        \n        return (cbind(subject_data,y_data,x_data)) \n}\n\n##saves the data into the result folder\nsaveResult <- function (data,name){\n        \n        print(paste(\"Saving data\", name))\n        \n        file <- paste(result_folder, \"/\", name,\".txt\" ,sep=\"\")\n        write.table(data,file, row.name=FALSE)\n}\n\n\n\n##get common data tables\n\n#features used for col names when creating train and test data sets\nfeatures <- getTable(\"features.txt\")\n\n## Load the data sets\ntrain <- getData(\"train\",features)\ntest <- getData(\"test\",features)\n\n## 1. Merges the training and the test sets to create one data set. < DONE\n# merge datasets\ndata <- rbind(train, test)\n\n# rearrange the data using id\ndata <- arrange(data, id)\n\n\n\n## 3. Uses descriptive activity names to name the activities in the data set \n##enter name of activity into dataTable\nactivity_labels <- getTable(\"activity_labels.txt\")\n\ndata$activity <- factor(data$activity, levels=activity_labels$V1, labels=activity_labels$V2)\n\n## 4. Appropriately labels the data set with descriptive activity names.\n\nnames(data)<-gsub(\"std()\", \"SD\", names(data))\nnames(data)<-gsub(\"mean()\", \"MEAN\", names(data))\nnames(data)<-gsub(\"^t\", \"time\", names(data))\nnames(data)<-gsub(\"^f\", \"frequency\", names(data))\nnames(data)<-gsub(\"Acc\", \"Accelerometer\", names(data))\nnames(data)<-gsub(\"Gyro\", \"Gyroscope\", names(data))\nnames(data)<-gsub(\"Mag\", \"Magnitude\", names(data))\nnames(data)<-gsub(\"BodyBody\", \"Body\", names(data))\n\n\n\n## 2. Extracts only the measurements on the mean and standard deviation for each measurement. \ndataset1 <- data[,c(1,2,grep(\"SD\", colnames(data)), grep(\"MEAN\", colnames(data)))]\n\n\n# save dataset1 into results folder\nsaveResult(dataset1,\"dataset1\")\n\n## 5. Creates a second, independent tidy data set with the average of each variable for each activity and each subject. \ndataset2 <- ddply(dataset1, .(id, activity), .fun=function(x){ colMeans(x[,-c(1:2)]) })\n\n# Adds \"_AVG\" to colnames\ncolnames(dataset2)[-c(1:2)] <- paste(colnames(dataset2)[-c(1:2)], \"_AVG\", sep=\"\")\n\n# Save tidy dataset2 into results folder\nsaveResult(dataset2,\"TidyData\")\n",
    "created" : 1429889068990.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4231510892",
    "id" : "EEBF009C",
    "lastKnownWriteTime" : 1429888794,
    "path" : "C:/Users/lacey.gray/Coursera/Exploring Data Course Project/run_analysis.R",
    "project_path" : "run_analysis.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}